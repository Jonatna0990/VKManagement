<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="album_null" xml:space="preserve">
    <value>альбомов</value>
  </data>
  <data name="album_one" xml:space="preserve">
    <value>альбом</value>
  </data>
  <data name="album_two" xml:space="preserve">
    <value>альбома</value>
  </data>
  <data name="audio_null" xml:space="preserve">
    <value>аудиозаписей</value>
  </data>
  <data name="audio_one" xml:space="preserve">
    <value>аудиозапись</value>
  </data>
  <data name="audio_two" xml:space="preserve">
    <value>аудиозаписи</value>
  </data>
  <data name="club_null" xml:space="preserve">
    <value>сообществ</value>
  </data>
  <data name="club_one" xml:space="preserve">
    <value>сообщество</value>
  </data>
  <data name="club_two" xml:space="preserve">
    <value>сообщества</value>
  </data>
  <data name="comment_null" xml:space="preserve">
    <value>комментариев</value>
  </data>
  <data name="comment_one" xml:space="preserve">
    <value>комментарий</value>
  </data>
  <data name="comment_two" xml:space="preserve">
    <value>комментария</value>
  </data>
  <data name="counter_one" xml:space="preserve">
    <value>участник</value>
  </data>
  <data name="counter_two" xml:space="preserve">
    <value>участника</value>
  </data>
  <data name="couter_null" xml:space="preserve">
    <value>участников</value>
  </data>
  <data name="doc_null" xml:space="preserve">
    <value>документов</value>
  </data>
  <data name="doc_one" xml:space="preserve">
    <value>документ</value>
  </data>
  <data name="doc_two" xml:space="preserve">
    <value>документа</value>
  </data>
  <data name="follower_null" xml:space="preserve">
    <value>подписчиков</value>
  </data>
  <data name="follower_one" xml:space="preserve">
    <value>подписчик</value>
  </data>
  <data name="follower_two" xml:space="preserve">
    <value>подписчика</value>
  </data>
  <data name="group_null" xml:space="preserve">
    <value>групп</value>
  </data>
  <data name="group_one" xml:space="preserve">
    <value>группа</value>
  </data>
  <data name="group_two" xml:space="preserve">
    <value>группы</value>
  </data>
  <data name="market_album_null" xml:space="preserve">
    <value>подборок</value>
  </data>
  <data name="market_album_one" xml:space="preserve">
    <value>подборка</value>
  </data>
  <data name="market_album_two" xml:space="preserve">
    <value>подборки</value>
  </data>
  <data name="message_null" xml:space="preserve">
    <value>сообщений</value>
  </data>
  <data name="message_one" xml:space="preserve">
    <value>сообщение</value>
  </data>
  <data name="message_two" xml:space="preserve">
    <value>сообщения</value>
  </data>
  <data name="page_null" xml:space="preserve">
    <value>страниц</value>
  </data>
  <data name="page_one" xml:space="preserve">
    <value>страница</value>
  </data>
  <data name="page_two" xml:space="preserve">
    <value>страницы</value>
  </data>
  <data name="photo_null" xml:space="preserve">
    <value>фотографий</value>
  </data>
  <data name="photo_one" xml:space="preserve">
    <value>фотография</value>
  </data>
  <data name="photo_two" xml:space="preserve">
    <value>фотографии</value>
  </data>
  <data name="product_null" xml:space="preserve">
    <value>товаров</value>
  </data>
  <data name="product_one" xml:space="preserve">
    <value>товар</value>
  </data>
  <data name="product_two" xml:space="preserve">
    <value>товара</value>
  </data>
  <data name="topic_null" xml:space="preserve">
    <value>обсуждений</value>
  </data>
  <data name="topic_one" xml:space="preserve">
    <value>обсуждение</value>
  </data>
  <data name="topic_two" xml:space="preserve">
    <value>обсуждения</value>
  </data>
  <data name="video_null" xml:space="preserve">
    <value>видеозаписей</value>
  </data>
  <data name="video_one" xml:space="preserve">
    <value>видеозапись</value>
  </data>
  <data name="video_two" xml:space="preserve">
    <value>видеозаписи</value>
  </data>
</root>